<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="qingning.db.common.mybatis.persistence.LecturerCoursesProfitMapper" >

  <insert id="insertLecturerCoursesProfit" parameterType="hashmap" >
    insert into t_lecturer_courses_profit
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="profit_id != null" >
        profit_id,
      </if>
      <if test="course_id != null" >
        course_id,
      </if>
      <if test="room_id != null" >
        room_id,
      </if>
      <if test="lecturer_id != null" >
        lecturer_id,
      </if>
      <if test="user_id != null" >
        user_id,
      </if>
      <if test="distributer_id != null" >
        distributer_id,
      </if>
      <if test="profit_amount != null" >
        profit_amount,
      </if>
      <if test="profit_type != null" >
        profit_type,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="create_date != null" >
        create_date,
      </if>
      <if test="payment_id != null" >
        payment_id,
      </if>
      <if test="payment_type != null" >
        payment_type,
      </if>
      <if test="position != null" >
        `position`,
      </if>
      <if test="share_amount != null" >
        share_amount,
      </if>
      <if test="rq_code != null" >
        rq_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="profit_id != null" >
        #{profit_id},
      </if>
      <if test="course_id != null" >
        #{course_id},
      </if>
      <if test="room_id != null" >
        #{room_id},
      </if>
      <if test="lecturer_id != null" >
        #{lecturer_id},
      </if>
      <if test="user_id != null" >
        #{user_id},
      </if>
      <if test="distributer_id != null" >
        #{distributer_id},
      </if>
      <if test="profit_amount != null" >
        #{profit_amount},
      </if>
      <if test="profit_type != null" >
        #{profit_type},
      </if>
      <if test="create_time != null" >
        #{create_time},
      </if>
      <if test="create_date != null" >
        #{create_date},
      </if>
      <if test="payment_id != null" >
        #{payment_id},
      </if>
      <if test="payment_type != null" >
        #{payment_type},
      </if>
      <if test="position != null" >
        #{position},
      </if>
      <if test="share_amount != null" >
        #{share_amount},
      </if>
      <if test="rq_code != null" >
        #{rq_code},
      </if>
    </trim>
  </insert>
  
  <select id="findRewardByUserIdAndCourseId" resultType="hashmap" parameterType="hashmap" >
    select * from t_lecturer_courses_profit  where course_id = #{course_id} and user_id = #{user_id} limit 1
  </select>
  
  <select id="findCourseProfitList" resultType="hashmap" parameterType="hashmap" >
   	select a.*,ifnull(b.nick_name,b.user_name) student from t_lecturer_courses_profit a, t_user b where a.course_id=#{course_id} and a.user_id=b.user_id
   	<if test="position != null">
   		and a.position <![CDATA[ < ]]> #{position}
   	</if>
   	<if test='profit_type != "2"'>
   		and a.profit_type=#{profit_type} 
   	</if>
   	order by a.position desc limit #{page_count}
  </select>
  
  <select id="findUserConsumeRecords" resultType="hashmap" parameterType="hashmap" >
    select
    lcp.profit_type, lcp.course_id, lcp.profit_amount,
    lcp.create_time, lcp.position, lcp.lecturer_id,
    se.series_title
    from t_lecturer_courses_profit lcp
    LEFT JOIN t_series se ON se.series_id = lcp.course_id
    where 1=1
    and user_id = #{user_id}
    <if test="lecturer_id != null" >
      and lcp.lecturer_id = #{lecturer_id}
    </if>
    <if test="position != null" >
     and  `position` <![CDATA[<]]> #{position}
    </if>
    <if test="course_type != null" >
     and  course_type = #{course_type}
    </if>
    order by `position` desc
    limit #{page_count}
  </select>
  <select id="findUserIncomeRecords" resultType="hashmap" parameterType="hashmap" >
    select
    lcp.profit_type, lcp.course_id, lcp.profit_amount,
    lcp.create_time, lcp.position, lcp.user_id,
    se.series_title
    from t_lecturer_courses_profit lcp
    LEFT JOIN t_series se ON se.series_id = lcp.course_id
    where 1=1
    and lcp.lecturer_id = #{user_id}
    <if test="position != null" >
     and  `position` <![CDATA[<]]> #{position}
    </if>
    <if test="course_type != null" >
     and  course_type = #{course_type}
    </if>
    order by `position` desc
    limit #{page_count}
  </select>

  <select id="findUserBuiedRecords" resultType="hashmap" parameterType="hashmap" >
    select
    lcp.profit_type, lcp.course_id, lcp.profit_amount,
    lcp.create_time, lcp.position, lcp.user_id,
    se.series_title,se.series_id,se.series_img as series_image,
    se.series_course_type as type
    from t_lecturer_courses_profit lcp
    LEFT JOIN t_series se ON se.series_id = lcp.course_id
    where 1=1
    <if test="lecturer_id != null" >
      and lcp.lecturer_id = #{lecturer_id}
    </if>
    <if test="user_id != null" >
      and lcp.user_id = #{user_id}
    </if>
    <if test="position != null" >
     and  `position` <![CDATA[<]]> #{position}
    </if>
    <if test="course_type != null" >
     and  course_type = #{course_type}
    </if>
    <if test="profit_type != null" >
     and  profit_type = #{profit_type}
    </if>
    <if test="position != null">
      and position <![CDATA[ < ]]> #{position}
    </if>
    order by `position` desc
    limit #{page_count}
  </select>

  <select id="findUserDistributionInfoForLastDoneNum" resultType="hashmap" parameterType="hashmap" >
    select
    *
    from t_lecturer_courses_profit
    where 1=1
    and user_id = #{user_id}
    and distributer_id = #{distributer_id}
    and room_id = #{room_id}
    and rq_code = #{rq_code}
    limit 1
  </select>

  <select id="findCoursesSumInfo" resultType="hashmap" parameterType="hashmap">
  	select sum(profit_amount) profit_amount,sum(share_amount) share_amount,sum(profit_amount-share_amount) lecturer_profit 
	from t_lecturer_courses_profit where 1=1
	<if test="course_id != null" >
		and course_id= #{course_id}
	</if>
	<if test="lecturer_id != null" >
		and lecturer_id= #{lecturer_id}
	</if>
	<if test="room_id != null" > 
		and room_id=#{room_id}
	</if>
	<if test="distributer_id != null" >
		and distributer_id=#{distributer_id}
	</if>
	<if test="rq_code != null" >
		and rq_code=#{rq_code}
	</if>
	<if test="profit_type != null">
		and profit_type=#{profit_type}
	</if>
	<if test="create_date != null">
		and create_date=#{create_date}
	</if>
  </select>

  <select id="selectOrdersListByUserId" resultType="hashmap" parameterType="hashmap">
    SELECT
      t.profit_id AS order_id,
      t.user_id,
      t.distributer_id,
      t.profit_type,
      t.share_amount,
      t.course_id,
      t.profit_amount,
      t.create_time,
      se.series_title as goods_name,
      se.series_price AS price
    FROM
    t_lecturer_courses_profit t
    LEFT JOIN t_series se ON se.series_id = t.course_id
    WHERE
    1=1
    and t.lecturer_id = #{lecturer_id}
	<if test="profit_type != null">
		and profit_type=#{profit_type}
	</if>
    ORDER BY t.create_time DESC
  </select>
  <select id="searchOrdersListByUserId" resultType="hashmap" parameterType="hashmap">
    SELECT
      t.profit_id AS order_id,
      t.user_id,
      t.distributer_id,
      t.profit_type,
      t.share_amount,
      t.course_id,
      t.profit_amount,
      t.create_time,
      se.series_price AS price,
      IFNULL(
      se.series_title,
      co.course_title
      ) AS goods_name
    FROM
    t_lecturer_courses_profit t
    LEFT JOIN t_series se ON se.series_id = t.course_id
    LEFT JOIN t_courses co ON co.course_id = t.course_id
    LEFT JOIN t_user u ON u.user_id = t.user_id
    WHERE
    1 = 1
    and t.lecturer_id = #{lecturer_id}
	<if test="nick_name != null">
		and u.nick_name like'%${nick_name}%'
	</if>
	<if test="course_name != null">
		and (se.series_title like'%${course_name}%' OR
      co.course_title like'%${course_name}%')
	</if>
	<if test="dist != null">
      AND t.distributer_id is null
	</if>
	<if test="auto != null">
      AND t.distributer_id is not null
	</if>
    ORDER BY t.create_time DESC
  </select>
  
  <!-- 获取系列课收益明细列表 -->
  <select id="selectSeriesProfitListByMap" parameterType="hashmap" resultType="hashmap">
  	SELECT profit.*, user.nick_name 
	FROM t_lecturer_courses_profit profit
	LEFT JOIN t_user user ON user.user_id = profit.user_id
	<where>
		<if test="series_id != null and series_id != ''">
			and profit.course_id = #{series_id}
		</if>
		<if test="create_time != null"><!-- 排除前端获取第一页后新增的数据 -->
			and profit.create_time <![CDATA[ <= ]]> #{create_time}
		</if>
	</where>
	ORDER BY profit.position DESC
	<if test="readed_count != null and page_count != null">
		limit #{readed_count}, #{page_count}
	</if>
  </select>
  
  <!-- 获取系列课收益统计（门票总收入，总收入） -->
  <select id="selectSeriesProfitStatistics" parameterType="hashmap" resultType="hashmap">
	SELECT IFNULL(SUM(profit_amount), 0) amount FROM t_lecturer_courses_profit	<!-- 统计门票总收入 -->
		<where>
			profit_type = 2	
			<if test="series_id != null and series_id != ''">
				and course_id = #{series_id}
			</if>
			<if test="create_time != null"><!-- 排除前端获取第一页后新增的数据 -->
				and create_time <![CDATA[ <= ]]> #{create_time}
			</if>
		</where>
	UNION ALL
	SELECT IFNULL(SUM(profit_amount), 0) amount FROM t_lecturer_courses_profit <!-- 统计总收入 -->
		<where>
			<if test="series_id != null and series_id != ''">
				and course_id = #{series_id}
			</if>
			<if test="create_time != null"><!-- 排除前端获取第一页后新增的数据 -->
				and create_time <![CDATA[ <= ]]> #{create_time}
			</if>
		</where>
  </select>
  
</mapper>