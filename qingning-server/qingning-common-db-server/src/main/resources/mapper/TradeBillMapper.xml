<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="qingning.common.db.persistence.mybatis.TradeBillMapper" >
  <resultMap id="BaseResultMap" type="qingning.common.db.persistence.mybatis.entity.TradeBill" >
    <id column="trade_id" property="tradeId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="room_id" property="roomId" jdbcType="VARCHAR" />
    <result column="course_id" property="courseId" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="DOUBLE" />
    <result column="payment" property="payment" jdbcType="DOUBLE" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="close_reason" property="closeReason" jdbcType="VARCHAR" />
    <result column="close_time" property="closeTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="profit_type" property="profitType" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    trade_id, user_id, room_id, course_id, amount, payment, status, close_reason, close_time,
    create_time, update_time, profit_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from t_trade_bill
    where trade_id = #{tradeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_trade_bill
    where trade_id = #{tradeId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="qingning.common.db.persistence.mybatis.entity.TradeBill" >
    insert into t_trade_bill (trade_id, user_id, room_id,
    course_id, amount, payment,
    status, close_reason, close_time,
    create_time, update_time, profit_type
    )
    values (#{tradeId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{roomId,jdbcType=VARCHAR},
    #{courseId,jdbcType=VARCHAR}, #{amount,jdbcType=DOUBLE}, #{payment,jdbcType=DOUBLE},
    #{status,jdbcType=CHAR}, #{closeReason,jdbcType=VARCHAR}, #{closeTime,jdbcType=TIMESTAMP},
    #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{profitType,jdbcType=CHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="qingning.common.db.persistence.mybatis.entity.TradeBill" >
    insert into t_trade_bill
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tradeId != null" >
        trade_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="roomId != null" >
        room_id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="payment != null" >
        payment,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="closeReason != null" >
        close_reason,
      </if>
      <if test="closeTime != null" >
        close_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="profitType != null" >
        profit_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tradeId != null" >
        #{tradeId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roomId != null" >
        #{roomId,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="payment != null" >
        #{payment,jdbcType=DOUBLE},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="closeReason != null" >
        #{closeReason,jdbcType=VARCHAR},
      </if>
      <if test="closeTime != null" >
        #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="profitType != null" >
        #{profitType,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="qingning.common.db.persistence.mybatis.entity.TradeBill" >
    update t_trade_bill
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roomId != null" >
        room_id = #{roomId,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="payment != null" >
        payment = #{payment,jdbcType=DOUBLE},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="closeReason != null" >
        close_reason = #{closeReason,jdbcType=VARCHAR},
      </if>
      <if test="closeTime != null" >
        close_time = #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="profitType != null" >
        profit_type = #{profitType,jdbcType=CHAR},
      </if>
    </set>
    where trade_id = #{tradeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="qingning.common.db.persistence.mybatis.entity.TradeBill" >
    update t_trade_bill
    set user_id = #{userId,jdbcType=VARCHAR},
    room_id = #{roomId,jdbcType=VARCHAR},
    course_id = #{courseId,jdbcType=VARCHAR},
    amount = #{amount,jdbcType=DOUBLE},
    payment = #{payment,jdbcType=DOUBLE},
    status = #{status,jdbcType=CHAR},
    close_reason = #{closeReason,jdbcType=VARCHAR},
    close_time = #{closeTime,jdbcType=TIMESTAMP},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    update_time = #{updateTime,jdbcType=TIMESTAMP},
    profit_type = #{profitType,jdbcType=CHAR}
    where trade_id = #{tradeId,jdbcType=VARCHAR}
  </update>

  <select id="findByOutTradeNo" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from t_trade_bill
    where trade_id = #{outTradeNo}
  </select>
</mapper>