<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="qingning.db.common.mybatis.persistence.SeriesStudentsMapper" >

  <select id="findCourseStudentList" resultType="hashmap" parameterType="hashmap" >
    select
    cs.user_id, cs.create_time, cs.student_pos, u.nick_name, u.avatar_address
    from t_courses_students cs join t_user u on cs.user_id = u.user_id
    where 1 = 1
    and cs.course_id = #{course_id}
    <if test="student_pos != null" >
      and cs.student_pos <![CDATA[ < ]]> #{student_pos}
    </if>
    <if test="all_ban_user_id_list != null" >
      and cs.user_id not in
      <foreach collection="all_ban_user_id_list" item="item" index="index" open="("
               separator="," close=")">
        #{item}
      </foreach>
    </if>
    order by cs.student_pos desc
    limit #{page_count}
  </select>


  <select id="findCourseAllStudentList" resultType="hashmap" parameterType="java.lang.String" >
    select a.*,b.m_user_id,b.m_pwd,b.web_openid
    from t_courses_students a , t_login_info b where a.user_id=b.user_id and a.course_id = #{course_id}
  </select>


  <select id="findCourseStudentListWithLoginInfo" resultType="hashmap" parameterType="hashmap" >
    select
    cs.user_id, cs.create_time, cs.student_pos, u.m_user_id, u.m_pwd, u.web_openid 
    from t_courses_students cs join t_login_info u on cs.user_id = u.user_id
    where 1 = 1
    and cs.course_id = #{course_id}
    <if test="student_pos != null" >
      and cs.student_pos <![CDATA[ < ]]> #{student_pos}
    </if>    
    <if test="page_count != null" >
      order by cs.student_pos desc limit #{page_count}
    </if>
  </select>



  <select id="findLatestStudentAvatarAddList" resultType="string" parameterType="hashmap" >
    select
    u.avatar_address
    from t_courses_students cs join t_user u  on cs.user_id = u.user_id
    where 1 = 1
    and course_id = #{course_id}
    order by cs.create_time DESC
    limit #{size}
  </select>

  <select id="findBanUserListInfo" resultType="hashmap" parameterType="java.util.Map" >
    select
    u.user_id, u.nick_name, u.avatar_address, cs.create_time
    from t_courses_students cs join t_user u on cs.user_id = u.user_id
    where
    cs.user_id in
    <foreach collection="list" item="item" index="index" open="("
             separator="," close=")">
      #{item}
    </foreach>  and cs.course_id = #{course_id}
  </select>

  <select id="findUserIdsByCourseId" resultType="string" parameterType="string" >
    select user_id from t_courses_students where 1 = 1 and course_id = #{course_id}
  </select>
  
  <select id="isStudentOfTheSeries" resultType="string" parameterType="hashmap" >
    select '1' from t_series_students
    where series_id = #{series_id} and user_id = #{user_id} limit 1
  </select>
  
  <select id="findSeriesIdByStudent" resultType="hashmap" parameterType="hashmap" >
  	select series.series_id,seriesStudent.student_pos from t_series_students seriesStudent,t_series series
  	 where user_id=#{user_id}
  	 and  series.series_id = seriesStudent.series_id and seriesStudent.value_from = 0
  	 ORDER BY series.update_course_time DESC
  </select>


  <insert id="insertStudent" parameterType="hashmap" >
    insert into t_series_students
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="student_id != null" >
        student_id,
      </if>
      <if test="user_id != null" >
        user_id,
      </if>
      <if test="distributer_id != null" >
        distributer_id,
      </if>
      <if test="lecturer_id != null" >
        lecturer_id,
      </if>
      <if test="series_id != null" >
        series_id,
      </if>
      <if test="payment_amount != null" >
        payment_amount,
      </if>
      <if test="course_password != null" >
        course_password,
      </if>
      <if test="student_type != null" >
        student_type,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="create_date != null" >
        create_date,
      </if>
      <if test="student_pos != null">
        student_pos,
      </if>
      <if test="rq_code != null">
        rq_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="student_id != null" >
        #{student_id},
      </if>
      <if test="user_id != null" >
        #{user_id},
      </if>
      <if test="distributer_id != null" >
        #{distributer_id},
      </if>
      <if test="lecturer_id != null" >
        #{lecturer_id},
      </if>
      <if test="series_id != null" >
        #{series_id },
      </if>
      <if test="payment_amount != null" >
        #{payment_amount},
      </if>
      <if test="course_password != null" >
        #{course_password},
      </if>
      <if test="student_type != null" >
        #{student_type},
      </if>
      <if test="create_time != null" >
        #{create_time},
      </if>
      <if test="create_date != null" >
        #{create_date},
      </if>
      <if test="student_pos != null">
        #{student_pos},
      </if>
      <if test="rq_code != null">
         #{rq_code},
      </if>      
    </trim>
  </insert>

  <select id="findUserDistributionInfoForDoneNum" resultType="hashmap" parameterType="hashmap" >
    select * from t_courses_students
    where
    user_id = #{user_id}
    and distributer_id = #{distributer_id}
    and room_id = #{room_id}
    limit 1
  </select>

  <select id="findCourseRecommendUsers" resultType="hashmap" parameterType="hashmap" >
  	select b.nick_name, b.avatar_address, a.* from t_courses_students a, t_user b
  	where a.user_id=b.user_id
  	and a.room_id = #{room_id}
  	<if test="distributer_id !=null">
  		and a.distributer_id = #{distributer_id}
  	</if>
  	<if test="rq_code !=null">
  	    and a.rq_code=#{rq_code}
  	</if>
  	<if test="position != null">
  		and a.student_pos <![CDATA[ < ]]> #{position}
  	</if>
  	order by a.student_pos desc
  	limit #{page_count}
  </select>
  
  <select id="findSeriesRecommendUserNum" resultType="hashmap" parameterType="hashmap" >
    select count(1) as recommend_num
    from t_series_students
    where
    series_id = #{series_id}
    <if test="distributer_id != null">
    	and distributer_id = #{distributer_id}
    </if>
  </select>
  
  <!-- 根据条件查询系列id -->
  <select id="selectSeriesStudentsByMap" parameterType="hashmap" resultType="hashmap">
  	SELECT ss.user_id, ss.create_time, ss.series_id, s.update_course_time FROM t_series_students ss
  	JOIN t_series s ON ss.series_id = s.series_id
  	<where>
  		<if test="user_id != null">
  			and ss.user_id = #{user_id}
  		</if>
  		<if test="lecturer_id != null">
  			and ss.lecturer_id = #{lecturer_id}
  		</if>
  		<if test="series_id != null">
  			and ss.series_id = #{series_id}
  		</if>
  	</where>
  	
  </select>
</mapper>