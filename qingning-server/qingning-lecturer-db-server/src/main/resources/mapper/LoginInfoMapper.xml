<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="qingning.lecturer.db.persistence.mybatis.LoginInfoMapper" >
  <resultMap id="BaseResultMap" type="qingning.lecturer.db.persistence.mybatis.entity.LoginInfo" >
    <id column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="union_id" property="unionId" jdbcType="VARCHAR" />
    <result column="qq_id" property="qqId" jdbcType="VARCHAR" />
    <result column="phone_number" property="phoneNumber" jdbcType="VARCHAR" />
    <result column="passwd" property="passwd" jdbcType="VARCHAR" />
    <result column="m_user_id" property="mUserId" jdbcType="VARCHAR" />
    <result column="m_pwd" property="mPwd" jdbcType="VARCHAR" />
    <result column="user_role" property="userRole" jdbcType="VARCHAR" />
    <result column="system_role" property="systemRole" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="country" property="country" jdbcType="VARCHAR" />    
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="district" property="district" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="web_openid" property="webOpenid" jdbcType="VARCHAR" />
    <result column="subscribe" property="webOpenid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, union_id, qq_id, phone_number, passwd, m_user_id, m_pwd, user_role, system_role,
    status, country, province, city, district, create_time, update_time, web_openid,subscribe
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from t_login_info
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_login_info
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="qingning.lecturer.db.persistence.mybatis.entity.LoginInfo" >
    insert into t_login_info (user_id, union_id, qq_id,
    phone_number, passwd, m_user_id,
    m_pwd, user_role, system_role,
    status, province, province, city,
    district, create_time, update_time,subscribe,
    web_openid)
    values (#{userId,jdbcType=VARCHAR}, #{unionId,jdbcType=VARCHAR}, #{qqId,jdbcType=VARCHAR},
    #{phoneNumber,jdbcType=VARCHAR}, #{passwd,jdbcType=VARCHAR}, #{mUserId,jdbcType=VARCHAR},
    #{mPwd,jdbcType=VARCHAR}, #{userRole,jdbcType=VARCHAR}, #{systemRole,jdbcType=VARCHAR},
    #{status,jdbcType=CHAR},#{country,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR},
    #{district,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
    #{subscribe,jdbcType=VARCHAR},
    #{webOpenid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="qingning.lecturer.db.persistence.mybatis.entity.LoginInfo" >
    insert into t_login_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="unionId != null" >
        union_id,
      </if>
      <if test="qqId != null" >
        qq_id,
      </if>
      <if test="phoneNumber != null" >
        phone_number,
      </if>
      <if test="passwd != null" >
        passwd,
      </if>
      <if test="mUserId != null" >
        m_user_id,
      </if>
      <if test="mPwd != null" >
        m_pwd,
      </if>
      <if test="userRole != null" >
        user_role,
      </if>
      <if test="systemRole != null" >
        system_role,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="country != null" >
        country,
      </if>      
      <if test="province != null" >
        province,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="district != null" >
        district,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="subscribe != null" >
        subscribe,
      </if>      
      <if test="webOpenid != null" >
        web_openid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="unionId != null" >
        #{unionId,jdbcType=VARCHAR},
      </if>
      <if test="qqId != null" >
        #{qqId,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null" >
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null" >
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="mUserId != null" >
        #{mUserId,jdbcType=VARCHAR},
      </if>
      <if test="mPwd != null" >
        #{mPwd,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null" >
        #{userRole,jdbcType=VARCHAR},
      </if>
      <if test="systemRole != null" >
        #{systemRole,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="country != null" >
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null" >
        #{district,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="subscribe != null" >
        #{subscribe,jdbcType=VARCHAR},
      </if>      
      <if test="webOpenid != null" >
        #{webOpenid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="qingning.lecturer.db.persistence.mybatis.entity.LoginInfo" >
    update t_login_info
    <set >
      <if test="unionId != null" >
        union_id = #{unionId,jdbcType=VARCHAR},
      </if>
      <if test="qqId != null" >
        qq_id = #{qqId,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null" >
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null" >
        passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="mUserId != null" >
        m_user_id = #{mUserId,jdbcType=VARCHAR},
      </if>
      <if test="mPwd != null" >
        m_pwd = #{mPwd,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null" >
        user_role = #{userRole,jdbcType=VARCHAR},
      </if>
      <if test="systemRole != null" >
        system_role = #{systemRole,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="country != null" >
        #{country,jdbcType=VARCHAR},
      </if>      
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null" >
        district = #{district,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="webOpenid != null" >
        web_openid = #{webOpenid,jdbcType=VARCHAR},
      </if>
      <if test="subscribe != null" >
        subscribe = #{webOpenid,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="qingning.lecturer.db.persistence.mybatis.entity.LoginInfo" >
    update t_login_info
    set union_id = #{unionId,jdbcType=VARCHAR},
    qq_id = #{qqId,jdbcType=VARCHAR},
    phone_number = #{phoneNumber,jdbcType=VARCHAR},
    passwd = #{passwd,jdbcType=VARCHAR},
    m_user_id = #{mUserId,jdbcType=VARCHAR},
    m_pwd = #{mPwd,jdbcType=VARCHAR},
    user_role = #{userRole,jdbcType=VARCHAR},
    system_role = #{systemRole,jdbcType=VARCHAR},
    status = #{status,jdbcType=CHAR},
    country = #{country,jdbcType=VARCHAR},    
    province = #{province,jdbcType=VARCHAR},
    city = #{city,jdbcType=VARCHAR},
    district = #{district,jdbcType=VARCHAR},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    update_time = #{updateTime,jdbcType=TIMESTAMP},    
    web_openid = #{webOpenid,jdbcType=VARCHAR},
    subscribe = #{webOpenid,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>

  <select id="findLoginInfoByUserId" resultType="hashmap" parameterType="string" >
    select
    <include refid="Base_Column_List" />
    from t_login_info
    where
    user_id = #{userId}

  </select>
  
  <select id="findLoginInfoByUserIds" resultType="string" parameterType="hashmap" >
    select
     web_openid
    from t_login_info  where web_openid is not null and  user_id in    (
    <foreach collection="list" item="item" index="index" separator=",">
     #{item}
    </foreach>)
  </select>

  <update id="updateUserRole" parameterType="hashmap" >
    update t_login_info
    <set >
        user_role = CONCAT(user_role,#{add_role,jdbcType=VARCHAR})
    </set>
    where user_id = #{user_id,jdbcType=VARCHAR}
  </update>
  
</mapper>
