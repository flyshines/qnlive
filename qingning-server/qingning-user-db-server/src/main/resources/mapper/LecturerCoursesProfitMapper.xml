<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="qingning.user.db.persistence.mybatis.LecturerCoursesProfitMapper" >
  <resultMap id="BaseResultMap" type="qingning.user.db.persistence.mybatis.entity.LecturerCoursesProfit" >
    <id column="profit_id" property="profitId" jdbcType="VARCHAR" />
    <result column="course_id" property="courseId" jdbcType="VARCHAR" />
    <result column="room_id" property="roomId" jdbcType="VARCHAR" />
    <result column="lecturer_id" property="lecturerId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="distributer_id" property="distributerId" jdbcType="VARCHAR" />
    <result column="profit_amount" property="profitAmount" jdbcType="DOUBLE" />
    <result column="profit_type" property="profitType" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_date" property="createDate" jdbcType="DATE" />
    <result column="payment_id" property="paymentId" jdbcType="VARCHAR" />
    <result column="payment_type" property="paymentType" jdbcType="CHAR" />
    <result column="position" property="position" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    profit_id, course_id, room_id, lecturer_id, user_id, distributer_id, profit_amount,
    profit_type, create_time, create_date, payment_id, payment_type, `position`
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from t_lecturer_courses_profit
    where profit_id = #{profitId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_lecturer_courses_profit
    where profit_id = #{profitId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="qingning.user.db.persistence.mybatis.entity.LecturerCoursesProfit" >
    insert into t_lecturer_courses_profit (profit_id, course_id, room_id,
    lecturer_id, user_id, distributer_id,
    profit_amount, profit_type, create_time,
    create_date, payment_id, payment_type,
    `position`)
    values (#{profitId,jdbcType=VARCHAR}, #{courseId,jdbcType=VARCHAR}, #{roomId,jdbcType=VARCHAR},
    #{lecturerId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{distributerId,jdbcType=VARCHAR},
    #{profitAmount,jdbcType=DOUBLE}, #{profitType,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP},
    #{createDate,jdbcType=DATE}, #{paymentId,jdbcType=VARCHAR}, #{paymentType,jdbcType=CHAR},
    #{position,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="qingning.user.db.persistence.mybatis.entity.LecturerCoursesProfit" >
    insert into t_lecturer_courses_profit
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="profitId != null" >
        profit_id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="roomId != null" >
        room_id,
      </if>
      <if test="lecturerId != null" >
        lecturer_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="distributerId != null" >
        distributer_id,
      </if>
      <if test="profitAmount != null" >
        profit_amount,
      </if>
      <if test="profitType != null" >
        profit_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="paymentId != null" >
        payment_id,
      </if>
      <if test="paymentType != null" >
        payment_type,
      </if>
      <if test="position != null" >
        `position`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="profitId != null" >
        #{profitId,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="roomId != null" >
        #{roomId,jdbcType=VARCHAR},
      </if>
      <if test="lecturerId != null" >
        #{lecturerId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="distributerId != null" >
        #{distributerId,jdbcType=VARCHAR},
      </if>
      <if test="profitAmount != null" >
        #{profitAmount,jdbcType=DOUBLE},
      </if>
      <if test="profitType != null" >
        #{profitType,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=DATE},
      </if>
      <if test="paymentId != null" >
        #{paymentId,jdbcType=VARCHAR},
      </if>
      <if test="paymentType != null" >
        #{paymentType,jdbcType=CHAR},
      </if>
      <if test="position != null" >
        #{position,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="qingning.user.db.persistence.mybatis.entity.LecturerCoursesProfit" >
    update t_lecturer_courses_profit
    <set >
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="roomId != null" >
        room_id = #{roomId,jdbcType=VARCHAR},
      </if>
      <if test="lecturerId != null" >
        lecturer_id = #{lecturerId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="distributerId != null" >
        distributer_id = #{distributerId,jdbcType=VARCHAR},
      </if>
      <if test="profitAmount != null" >
        profit_amount = #{profitAmount,jdbcType=DOUBLE},
      </if>
      <if test="profitType != null" >
        profit_type = #{profitType,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=DATE},
      </if>
      <if test="paymentId != null" >
        payment_id = #{paymentId,jdbcType=VARCHAR},
      </if>
      <if test="paymentType != null" >
        payment_type = #{paymentType,jdbcType=CHAR},
      </if>
      <if test="position != null" >
        `position` = #{position,jdbcType=BIGINT},
      </if>
    </set>
    where profit_id = #{profitId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="qingning.user.db.persistence.mybatis.entity.LecturerCoursesProfit" >
    update t_lecturer_courses_profit
    set course_id = #{courseId,jdbcType=VARCHAR},
    room_id = #{roomId,jdbcType=VARCHAR},
    lecturer_id = #{lecturerId,jdbcType=VARCHAR},
    user_id = #{userId,jdbcType=VARCHAR},
    distributer_id = #{distributerId,jdbcType=VARCHAR},
    profit_amount = #{profitAmount,jdbcType=DOUBLE},
    profit_type = #{profitType,jdbcType=CHAR},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    create_date = #{createDate,jdbcType=DATE},
    payment_id = #{paymentId,jdbcType=VARCHAR},
    payment_type = #{paymentType,jdbcType=CHAR},
    `position` = #{position,jdbcType=BIGINT}
    where profit_id = #{profitId,jdbcType=VARCHAR}
  </update>

  <select id="findUserConsumeRecords" resultType="hashmap" parameterType="hashmap" >
    select
    lcp.profit_type, lcp.course_id, lcp.profit_amount, lcp.profit_amount,
    lcp.record_time, lcp.position, t_courses.course_title
    from t_lecturer_courses_profit lcp left join t_courses  on t_courses.course_id = lcp.course_id
    where 1=1
    and user_id = #{user_id}
    <if test="position != null" >
     and  `position` <![CDATA[<]]> #{position}
    </if>
    order by `position` desc
    limit #{page_count}
  </select>

</mapper>