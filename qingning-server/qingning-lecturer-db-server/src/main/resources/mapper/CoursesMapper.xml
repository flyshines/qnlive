<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="qingning.lecturer.db.persistence.mybatis.CoursesMapper" >
  <resultMap id="BaseResultMap" type="qingning.lecturer.db.persistence.mybatis.entity.Courses" >
    <id column="course_id" property="courseId" jdbcType="VARCHAR" />
    <result column="room_id" property="roomId" jdbcType="VARCHAR" />
    <result column="lecturer_id" property="lecturerId" jdbcType="VARCHAR" />
    <result column="course_title" property="courseTitle" jdbcType="VARCHAR" />
    <result column="course_url" property="courseUrl" jdbcType="VARCHAR" />
    <result column="course_remark" property="courseRemark" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="course_type" property="courseType" jdbcType="CHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="rq_code" property="rqCode" jdbcType="VARCHAR" />
    <result column="course_price" property="coursePrice" jdbcType="DOUBLE" />
    <result column="course_password" property="coursePassword" jdbcType="VARCHAR" />
    <result column="student_num" property="studentNum" jdbcType="BIGINT" />
    <result column="course_amount" property="courseAmount" jdbcType="DOUBLE" />
    <result column="extra_num" property="extraNum" jdbcType="BIGINT" />
    <result column="extra_amount" property="extraAmount" jdbcType="DOUBLE" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_date" property="createDate" jdbcType="DATE" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="real_start_time" property="realStartTime" jdbcType="TIMESTAMP" />
    <result column="im_course_id" property="imCourseId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    course_id, room_id, lecturer_id, course_title, course_url, course_remark, start_time, 
    end_time, course_type, status, rq_code, course_price, course_password, student_num, 
    course_amount, extra_num, extra_amount, create_time, create_date, update_time, real_start_time, 
    im_course_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_courses
    where course_id = #{courseId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_courses
    where course_id = #{courseId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="qingning.lecturer.db.persistence.mybatis.entity.Courses" >
    insert into t_courses (course_id, room_id, lecturer_id, 
      course_title, course_url, course_remark, 
      start_time, end_time, course_type, 
      status, rq_code, course_price, 
      course_password, student_num, course_amount, 
      extra_num, extra_amount, create_time, 
      create_date, update_time, real_start_time, 
      im_course_id)
    values (#{courseId,jdbcType=VARCHAR}, #{roomId,jdbcType=VARCHAR}, #{lecturerId,jdbcType=VARCHAR}, 
      #{courseTitle,jdbcType=VARCHAR}, #{courseUrl,jdbcType=VARCHAR}, #{courseRemark,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{courseType,jdbcType=CHAR}, 
      #{status,jdbcType=CHAR}, #{rqCode,jdbcType=VARCHAR}, #{coursePrice,jdbcType=DOUBLE}, 
      #{coursePassword,jdbcType=VARCHAR}, #{studentNum,jdbcType=BIGINT}, #{courseAmount,jdbcType=DOUBLE}, 
      #{extraNum,jdbcType=BIGINT}, #{extraAmount,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createDate,jdbcType=DATE}, #{updateTime,jdbcType=TIMESTAMP}, #{realStartTime,jdbcType=TIMESTAMP}, 
      #{imCourseId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="qingning.lecturer.db.persistence.mybatis.entity.Courses" >
    insert into t_courses
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="roomId != null" >
        room_id,
      </if>
      <if test="lecturerId != null" >
        lecturer_id,
      </if>
      <if test="courseTitle != null" >
        course_title,
      </if>
      <if test="courseUrl != null" >
        course_url,
      </if>
      <if test="courseRemark != null" >
        course_remark,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="courseType != null" >
        course_type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="rqCode != null" >
        rq_code,
      </if>
      <if test="coursePrice != null" >
        course_price,
      </if>
      <if test="coursePassword != null" >
        course_password,
      </if>
      <if test="studentNum != null" >
        student_num,
      </if>
      <if test="courseAmount != null" >
        course_amount,
      </if>
      <if test="extraNum != null" >
        extra_num,
      </if>
      <if test="extraAmount != null" >
        extra_amount,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="realStartTime != null" >
        real_start_time,
      </if>
      <if test="imCourseId != null" >
        im_course_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="roomId != null" >
        #{roomId,jdbcType=VARCHAR},
      </if>
      <if test="lecturerId != null" >
        #{lecturerId,jdbcType=VARCHAR},
      </if>
      <if test="courseTitle != null" >
        #{courseTitle,jdbcType=VARCHAR},
      </if>
      <if test="courseUrl != null" >
        #{courseUrl,jdbcType=VARCHAR},
      </if>
      <if test="courseRemark != null" >
        #{courseRemark,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="courseType != null" >
        #{courseType,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="rqCode != null" >
        #{rqCode,jdbcType=VARCHAR},
      </if>
      <if test="coursePrice != null" >
        #{coursePrice,jdbcType=DOUBLE},
      </if>
      <if test="coursePassword != null" >
        #{coursePassword,jdbcType=VARCHAR},
      </if>
      <if test="studentNum != null" >
        #{studentNum,jdbcType=BIGINT},
      </if>
      <if test="courseAmount != null" >
        #{courseAmount,jdbcType=DOUBLE},
      </if>
      <if test="extraNum != null" >
        #{extraNum,jdbcType=BIGINT},
      </if>
      <if test="extraAmount != null" >
        #{extraAmount,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="realStartTime != null" >
        #{realStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="imCourseId != null" >
        #{imCourseId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="qingning.lecturer.db.persistence.mybatis.entity.Courses" >
    update t_courses
    <set >
      <if test="roomId != null" >
        room_id = #{roomId,jdbcType=VARCHAR},
      </if>
      <if test="lecturerId != null" >
        lecturer_id = #{lecturerId,jdbcType=VARCHAR},
      </if>
      <if test="courseTitle != null" >
        course_title = #{courseTitle,jdbcType=VARCHAR},
      </if>
      <if test="courseUrl != null" >
        course_url = #{courseUrl,jdbcType=VARCHAR},
      </if>
      <if test="courseRemark != null" >
        course_remark = #{courseRemark,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="courseType != null" >
        course_type = #{courseType,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="rqCode != null" >
        rq_code = #{rqCode,jdbcType=VARCHAR},
      </if>
      <if test="coursePrice != null" >
        course_price = #{coursePrice,jdbcType=DOUBLE},
      </if>
      <if test="coursePassword != null" >
        course_password = #{coursePassword,jdbcType=VARCHAR},
      </if>
      <if test="studentNum != null" >
        student_num = #{studentNum,jdbcType=BIGINT},
      </if>
      <if test="courseAmount != null" >
        course_amount = #{courseAmount,jdbcType=DOUBLE},
      </if>
      <if test="extraNum != null" >
        extra_num = #{extraNum,jdbcType=BIGINT},
      </if>
      <if test="extraAmount != null" >
        extra_amount = #{extraAmount,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="realStartTime != null" >
        real_start_time = #{realStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="imCourseId != null" >
        im_course_id = #{imCourseId,jdbcType=VARCHAR},
      </if>
    </set>
    where course_id = #{courseId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="qingning.lecturer.db.persistence.mybatis.entity.Courses" >
    update t_courses
    set room_id = #{roomId,jdbcType=VARCHAR},
      lecturer_id = #{lecturerId,jdbcType=VARCHAR},
      course_title = #{courseTitle,jdbcType=VARCHAR},
      course_url = #{courseUrl,jdbcType=VARCHAR},
      course_remark = #{courseRemark,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      course_type = #{courseType,jdbcType=CHAR},
      status = #{status,jdbcType=CHAR},
      rq_code = #{rqCode,jdbcType=VARCHAR},
      course_price = #{coursePrice,jdbcType=DOUBLE},
      course_password = #{coursePassword,jdbcType=VARCHAR},
      student_num = #{studentNum,jdbcType=BIGINT},
      course_amount = #{courseAmount,jdbcType=DOUBLE},
      extra_num = #{extraNum,jdbcType=BIGINT},
      extra_amount = #{extraAmount,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_date = #{createDate,jdbcType=DATE},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      real_start_time = #{realStartTime,jdbcType=TIMESTAMP},
      im_course_id = #{imCourseId,jdbcType=VARCHAR}
    where course_id = #{courseId,jdbcType=VARCHAR}
  </update>

  <select id="findCourseByCourseId" resultType="hashmap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from t_courses
    where course_id = #{courseId}
  </select>

  <select id="findCourseListForLecturer" resultType="hashmap" parameterType="hashmap" >
    select
    <include refid="Base_Column_List" />
    from t_courses
    where 1 =1
    <if test="orderType == 1" >
      and start_time > #{startIndex}
    </if>
    <if test="orderType == 2" >
      <if test="startIndex != null" >
        and start_time <![CDATA[ < ]]> #{startIndex}
      </if>
    </if>
    <if test="lecturer_id != null" >
    	and lecturer_id = #{lecturer_id}
    </if>
    and `status` = #{status}
    order by start_time
    <if test="orderType == 1" >
      asc
    </if>
    <if test="orderType == 2" >
      desc
    </if>
    limit #{pageCount}
  </select>
  
  <select id="findCourseProfitList" resultType="hashmap" parameterType="hashmap" >
   	select a.*,ifnull(b.nick_name,b.user_name) student from t_lecturer_courses_profit a, t_user b where a.course_id=#{course_id} and a.user_id=b.user_id
   	<if test="position != null">
   		and a.position <![CDATA[ < ]]> #{position}
   	</if>
   	<if test='profit_type != "2"'>
   		and a.profit_type=#{profit_type} 
   	</if>
   	order by a.position desc limit #{page_count}
  </select>
</mapper>